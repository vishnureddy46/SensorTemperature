// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SensorTemperature.API.DbContexts;

#nullable disable

namespace SensorTemperature.API.Migrations
{
    [DbContext(typeof(RoomTemperatureInfoContext))]
    partial class RoomTemperatureInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("SensorTemperature.API.Entities.RoomSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RoomSensors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Room 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Room 2"
                        });
                });

            modelBuilder.Entity("SensorTemperature.API.Entities.Temperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Celsius")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomSensorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomSensorId");

                    b.ToTable("Temperatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Celsius = 60,
                            RoomSensorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Celsius = 90,
                            RoomSensorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Celsius = 70,
                            RoomSensorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Celsius = 80,
                            RoomSensorId = 2
                        });
                });

            modelBuilder.Entity("SensorTemperature.API.Entities.Temperature", b =>
                {
                    b.HasOne("SensorTemperature.API.Entities.RoomSensor", "RoomSensor")
                        .WithMany("Temperature")
                        .HasForeignKey("RoomSensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomSensor");
                });

            modelBuilder.Entity("SensorTemperature.API.Entities.RoomSensor", b =>
                {
                    b.Navigation("Temperature");
                });
#pragma warning restore 612, 618
        }
    }
}
